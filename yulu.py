# -*- coding: utf-8 -*-
"""yulu.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-iELcbj1rzXbWF1nHxkDm48r4jhg8ZbW
"""

import datetime
import math
import streamlit as st
import warnings
warnings.filterwarnings("ignore")
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

url = "https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/001/428/original/bike_sharing.csv?1642089089"
df_yulu = pd.read_csv(url)

st.write("""
            # Yulu bikes data """)

## get data for Yulu bikes
col1, col2 = st.columns(2)
with col1:
    s = st.selectbox(
        'Which season do you want to select?',
            (1, 2, 3, 4))
with col2:
    w = st.selectbox(
        'Which weather do you want to select?',
            (1, 2, 3, 4))
st.write(f"""
    ###  Season {s}'s and weather {w}'s data for - renting of Yulu bikes: """)

total_count_by_weather_season=df_yulu.groupby(['weather', 'season'])[['count', 'registered', 'casual']].sum().reset_index()

df=total_count_by_weather_season[ (total_count_by_weather_season['season'] == s) & (total_count_by_weather_season['weather'] == w) ]

#print the filtered dataframe
st.dataframe(df)

# Time range --> minimum and maximum values in the 'datetime' column
df_yulu['datetime'] = pd.to_datetime(df_yulu['datetime'])
print("Minimum Time: ", df_yulu['datetime'].min())
print("Maximum Time: ", df_yulu['datetime'].max())
df_time = df_yulu
#Add Month and MonthandYear columns to a new dataframe df_time
df_time['Month'] = df_yulu['datetime'].dt.month
df_time['MonthandYear'] = df_yulu['datetime'].dt.to_period('M').astype('string')

#Lineplot for time analysis
plt.figure(figsize=(12,4))
plt.legend(["Total Users", "Registered Users", "Casual Users"], loc = 'upper left', frameon = True)
sns.lineplot(data=df_time, x='MonthandYear', y='count', color='r')
sns.lineplot(data=df_time, x='MonthandYear', y='registered', color='g')
sns.lineplot(data=df_time, x='MonthandYear', y='casual', color='b')
plt.xticks(rotation = 90, fontsize = 8)
plt.ylabel("Count of cycles rented" , fontsize = 10)
plt.grid()
plt.plot() 
st.pyplot(fig)

